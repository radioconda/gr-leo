variables:
  GITLAB_CI_IMAGE_UBUNTU: 'ubuntu:jammy'
stages:
  - style
  - build
  - documentation

# 'style' stage
style:
  stage: style
  before_script:
    - apt-get -q update
    - apt-get -qy install astyle
  script:
    - 'astyle --dry-run --options=.astylerc --formatted lib/*.cc lib/*.h include/leo/*.h  | sed ''s/^Formatted/ERROR: Unformatted/;T;q1'''

# 'build' stage
ubuntu:
  image: ${GITLAB_CI_IMAGE_UBUNTU}
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  before_script:
    - apt-get -q update
    - apt-get -qy install software-properties-common
    - |
      apt-get -qy install \
          libboost-dev \
          libboost-date-time-dev \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libboost-system-dev \
          libboost-thread-dev \
          libboost-regex-dev \
          libboost-test-dev \
          swig \
          cmake \
          gcc \
          gnuradio-dev \
          libconfig++-dev \
          libgmp-dev \
          liborc-0.4-0 \
          liborc-0.4-dev \
          liborc-0.4-dev-bin \
          libsndfile1-dev \
          git
  stage: build
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=/usr ..
    - make
    - make install
    - ldconfig
    - python3 -c "import gnuradio.leo"

# 'documentation' stage
pages:
  image: ${GITLAB_CI_IMAGE_UBUNTU}
  before_script:
    - apt-get -q update
    - apt-get -qy install software-properties-common
    - |
      apt-get -qy install \
          libboost-dev \
          libboost-date-time-dev \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libboost-system-dev \
          libboost-thread-dev \
          libboost-regex-dev \
          libboost-test-dev \
          swig \
          cmake \
          doxygen \
          gcc \
          gnuradio-dev \
          libconfig++-dev \
          libgmp-dev \
          liborc-0.4-0 \
          liborc-0.4-dev \
          liborc-0.4-dev-bin \
          libsndfile1-dev \
          git
  stage: documentation
  script:
    - mkdir -p build
    - cd build
    - rm -rf *
    - cmake ..
    - make doxygen_target
    - cd ..
    - rm -rf public/*
    - mv build/docs/doxygen/html public/
  artifacts:
    paths:
      - public
